// <auto-generated />
using System;
using FinalProyect.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProyect.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211207153515_Agregando Cliente al detalle")]
    partial class AgregandoClientealdetalle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("FinalProyect.Entidades.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<int>("CondominioId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CondominiosCondominioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.HasIndex("CondominiosCondominioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("FinalProyect.Entidades.ClientesDetalle", b =>
                {
                    b.Property<int>("ClientesDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CondominioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClientesDetalleId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CondominioId");

                    b.ToTable("ClientesDetalle");
                });

            modelBuilder.Entity("FinalProyect.Entidades.Condominios", b =>
                {
                    b.Property<int>("CondominioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Costo")
                        .HasColumnType("REAL");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoCondominiosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CondominioId");

                    b.HasIndex("TipoCondominiosId");

                    b.ToTable("Condominios");
                });

            modelBuilder.Entity("FinalProyect.Entidades.Recibos", b =>
                {
                    b.Property<int>("ReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientesClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CondominioId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CondominiosCondominioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReciboId");

                    b.HasIndex("ClientesClienteId");

                    b.HasIndex("CondominiosCondominioId");

                    b.ToTable("Recibos");
                });

            modelBuilder.Entity("FinalProyect.Entidades.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Descripcion = "Admin"
                        });
                });

            modelBuilder.Entity("FinalProyect.Entidades.TipoCondominios", b =>
                {
                    b.Property<int>("TipoCondominioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.HasKey("TipoCondominioId");

                    b.ToTable("TipoCondominios");

                    b.HasData(
                        new
                        {
                            TipoCondominioId = 1,
                            Tipo = "Apartamento"
                        },
                        new
                        {
                            TipoCondominioId = 2,
                            Tipo = "Parqueo"
                        });
                });

            modelBuilder.Entity("FinalProyect.Entidades.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("TEXT");

                    b.Property<int>("RolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellido = "Solorin",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            FechaCreacion = new DateTime(2021, 12, 7, 11, 35, 14, 546, DateTimeKind.Local).AddTicks(6098),
                            Nombre = "Pedro",
                            NombreUsuario = "Admin",
                            RolId = 1
                        });
                });

            modelBuilder.Entity("FinalProyect.Entidades.Clientes", b =>
                {
                    b.HasOne("FinalProyect.Entidades.Condominios", "Condominios")
                        .WithMany()
                        .HasForeignKey("CondominiosCondominioId");

                    b.Navigation("Condominios");
                });

            modelBuilder.Entity("FinalProyect.Entidades.ClientesDetalle", b =>
                {
                    b.HasOne("FinalProyect.Entidades.Clientes", "Clientes")
                        .WithMany("Detalles")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProyect.Entidades.Condominios", "Condominios")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Condominios");
                });

            modelBuilder.Entity("FinalProyect.Entidades.Condominios", b =>
                {
                    b.HasOne("FinalProyect.Entidades.TipoCondominios", "TipoCondominios")
                        .WithMany()
                        .HasForeignKey("TipoCondominiosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCondominios");
                });

            modelBuilder.Entity("FinalProyect.Entidades.Recibos", b =>
                {
                    b.HasOne("FinalProyect.Entidades.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesClienteId");

                    b.HasOne("FinalProyect.Entidades.Condominios", "Condominios")
                        .WithMany()
                        .HasForeignKey("CondominiosCondominioId");

                    b.Navigation("Clientes");

                    b.Navigation("Condominios");
                });

            modelBuilder.Entity("FinalProyect.Entidades.Usuarios", b =>
                {
                    b.HasOne("FinalProyect.Entidades.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("FinalProyect.Entidades.Clientes", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
